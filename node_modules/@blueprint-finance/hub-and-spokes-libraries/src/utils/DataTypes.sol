// SPDX-License-Identifier: AGPL-3.0
pragma solidity 0.8.24;

// STRUCTS ////////////////////////////////////////////////////////////////

struct ConcretePolicyParams {
    uint40 initial_ltv;
    uint40 ltv_protect;
    uint40 liq_threshold;
    uint40 claim_fee;
    uint40 foreclosure_fee;
    uint40 gamma;
    uint256 total_borrowed;
    uint8 collateral_type; // index of the collateral
    uint8 total_claims;
}

struct CurrentPositionData {
    uint40 current_ltv;
    int40 current_ttl; // time to live in seconds
    uint8 number_of_claims;
}

struct PriceDropInspectionData {
    uint8 claims;
    uint256 owed;
    bool foreclosure_by_claim;
    bool foreclosure_by_debt;
}

struct ProtectionData {
    uint40 endTime;
    uint8 numberOfTranches;
    uint8 rightsEncoding;
    uint32 ltvProtectClaims;
    uint32 ltvProtectForeclosure;
    uint32 openingFeeRate;
    uint32 cancellationFeeRate;
    uint32[] trancheAmountFractionInMillionth;
    uint32[] trancheFeeRateInMillionth;
}

struct ProtectionDataAbsolute {
    uint40 endTime;
    uint8 numberOfTranches;
    uint8 protocolRights;
    uint8 remoteProxyRights;
    uint8 remoteConcreteerRights;
    uint8 remotePublicRights;
    uint256 ltvProtectForClaimsInBP;
    uint256 ltvProtectForForeclosureInBP;
    uint256 openingFeeInToken;
    uint256 cancellationFeeInToken;
    uint256[] trancheAmountInToken;
    uint256[] trancheFeeInToken;
}

enum SendFundsModality {
    SEND_THROUGH,
    ONLY_FIRST_STEP,
    ONLY_SECOND_STEP
}

enum AmountType {
    ClaimAmount,
    ClaimFeeAmount,
    ProtectionForeclosureFeeAmount,
    LiteForeclosureFeeAmount,
    OpenProtectionFeeAmount,
    CancelProtectionFeeAmount
}

enum ProtectionType {
    Unprotected, // Intervention: type(uint256).max or 1 WAD
    LiteProtected, // liteLtvProtect = lenderLiqLtv.mulDiv(WAD - bufferLtv, WAD);
    FullProtected, // fullLtvProtect = lenderLiqLtv.mulDiv(WAD - bufferLtv, WAD);
    ExpiredWithDebt, // fullLtvProtect = lenderLiqLtv.mulDiv(WAD - bufferLtv, WAD);
    ExpiredWithoutDebtWithLite, // liteLtvProtect
    ExpiredWithoutDebtWithoutLite // Intervention: type(uint256).max or 1 WAD

}
